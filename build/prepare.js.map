{"version":3,"sources":["../source/prepare.js"],"names":["prepare","settings","webpack_configuration","context","Error","server","output","server_build_bundle_path","resolve","server_build_folder","dirname","normalize","indexOf","emptyDirSync"],"mappings":";;;;;kBAUwBA,O;;AAVxB;;;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,OAAT,CAAiBC,QAAjB,EAA2BC,qBAA3B,EACf;AACC,KAAI,CAACA,sBAAsBC,OAA3B,EACA;AACC,QAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACA;;AAED,KAAI,CAACH,SAASI,MAAT,CAAgBC,MAArB,EACA;AACC,QAAM,IAAIF,KAAJ,CAAU,wCAAV,CAAN;AACA;;AAED,KAAMG,2BAA2B,eAAKC,OAAL,CAAaN,sBAAsBC,OAAnC,EAA4CF,SAASI,MAAT,CAAgBC,MAA5D,CAAjC;AACA,KAAMG,sBAAsB,eAAKC,OAAL,CAAaH,wBAAb,CAA5B;;AAEA;AACA,KAAIE,wBAAwB,eAAKE,SAAL,CAAeT,sBAAsBC,OAArC,CAA5B,EACA;AACC,QAAM,IAAIC,KAAJ,CAAU,+BAA+BK,mBAA/B,GAAqD,gGAA/D,CAAN;AACA;;AAED;AACA,KAAIA,oBAAoBG,OAApB,CAA4BV,sBAAsBC,OAAlD,MAA+D,CAAnE,EACA;AACC,QAAM,IAAIC,KAAJ,CAAU,+BAA+BK,mBAA/B,GAAqD,+CAArD,GAAuGP,sBAAsBC,OAA7H,GAAuI,6DAAjJ,CAAN;AACA;;AAED,mBAAGU,YAAH,CAAgBJ,mBAAhB;AACA","file":"prepare.js","sourcesContent":["import path from 'path'\nimport fs from 'fs-extra'\n\n// Creates (or cleans) the server-side build folder.\n//\n// That's needed because Nodemon, for example,\n// needs the folder to exist by the time it runs,\n// otherwise it won't detect any changes to the code\n// and therefore won't restart on code changes.\n//\nexport default function prepare(settings, webpack_configuration)\n{\n\tif (!webpack_configuration.context)\n\t{\n\t\tthrow new Error('Base folder not specified')\n\t}\n\n\tif (!settings.server.output)\n\t{\n\t\tthrow new Error('`settings.server.output` not specified')\n\t}\n\n\tconst server_build_bundle_path = path.resolve(webpack_configuration.context, settings.server.output)\n\tconst server_build_folder = path.dirname(server_build_bundle_path)\n\n\t// Extra caution to prevent data loss\n\tif (server_build_folder === path.normalize(webpack_configuration.context))\n\t{\n\t\tthrow new Error('`settings.server.output` \"' + server_build_folder + '\" points to the project root folder. Won\\'t clear that folder to prevent accidental data loss.')\n\t}\n\n\t// Extra caution to prevent data loss\n\tif (server_build_folder.indexOf(webpack_configuration.context) !== 0)\n\t{\n\t\tthrow new Error('`settings.server.output` \"' + server_build_folder + '\" points outside of the project root folder \"' + webpack_configuration.context + '\". Won\\'t clear that folder to prevent accidental data loss')\n\t}\n\n\tfs.emptyDirSync(server_build_folder)\n}"]}